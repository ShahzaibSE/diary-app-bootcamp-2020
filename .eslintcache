[{"/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/reportWebVitals.ts":"1","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/AppContainer/AppContainer.tsx":"2","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/features/entry/editor.slice.ts":"3","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/LoginSignUpContainer/LoginSignUpContainer.tsx":"4","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/Diaries/Diaries.tsx":"5","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/Diaries/Diaries.style.ts":"6","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/SignUp/Signup.style.tsx":"7","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/DiaryEntriesList/DiaryEntriesList.tsx":"8","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/Editor/Editor.style.ts":"9","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/features/auth/user.slice.ts":"10","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/Home/Home.tsx":"11","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/Login/Login.tsx":"12","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/Login/Login.style.ts":"13","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/DiaryTile/DiaryTile.style.ts":"14","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/SignUp/SignUp.tsx":"15","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/features/diary/diary.slice.ts":"16","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/DiaryTile/DiaryTile.tsx":"17","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/features/entry/entry.slice.ts":"18"},{"size":425,"mtime":1606477127516,"results":"19","hashOfConfig":"20"},{"size":920,"mtime":1616934540171,"results":"21","hashOfConfig":"20"},{"size":975,"mtime":1610642091882,"results":"22","hashOfConfig":"20"},{"size":3048,"mtime":1610997380347,"results":"23","hashOfConfig":"20"},{"size":9571,"mtime":1617038284580,"results":"24","hashOfConfig":"20"},{"size":2473,"mtime":1615210828655,"results":"25","hashOfConfig":"20"},{"size":762,"mtime":1611687831041,"results":"26","hashOfConfig":"20"},{"size":2656,"mtime":1615210828656,"results":"27","hashOfConfig":"20"},{"size":1062,"mtime":1613391895513,"results":"28","hashOfConfig":"20"},{"size":605,"mtime":1615210828657,"results":"29","hashOfConfig":"20"},{"size":770,"mtime":1615480041737,"results":"30","hashOfConfig":"20"},{"size":5164,"mtime":1615901904780,"results":"31","hashOfConfig":"20"},{"size":681,"mtime":1611594708170,"results":"32","hashOfConfig":"20"},{"size":1535,"mtime":1615739134358,"results":"33","hashOfConfig":"20"},{"size":7936,"mtime":1617028383054,"results":"34","hashOfConfig":"20"},{"size":903,"mtime":1610623932351,"results":"35","hashOfConfig":"20"},{"size":5625,"mtime":1617024041768,"results":"36","hashOfConfig":"20"},{"size":743,"mtime":1610628316407,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1nxmrnc",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"61"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"40"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/reportWebVitals.ts",[],["88","89"],"/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/AppContainer/AppContainer.tsx",["90"],"/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/features/entry/editor.slice.ts",[],["91","92"],"/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/LoginSignUpContainer/LoginSignUpContainer.tsx",["93","94","95","96","97"],"import React, {FC, useState} from 'react'\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from \"@material-ui/core/Grid\";\nimport {BrowserRouter as Router, Routes} from \"react-router-dom\";\n// Styles.\nimport {LoginSignUpContainerStyles} from \"./LoginSignUpContainer.style\"\nimport Login from \"./../Login/Login\"; // Log In Component\nimport SignUp from \"./../SignUp/SignUp\"; // Sign Up Component\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    dir?: string;\n    index: any;\n    value: any;\n}\n  \nfunction TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`full-width-tabpanel-${index}`}\n        aria-labelledby={`full-width-tab-${index}`}\n        {...other}\n        >\n        {value === index && (\n            <Box p={3}>\n            <Typography>{children}</Typography>\n            </Box>\n        )}\n        </div>\n    );\n}\n\nfunction a11yProps(index: any) {\n    return {\n      id: `full-width-tab-${index}`,\n      'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst LoginSignUpContainer:FC = () => {\n    const classes = LoginSignUpContainerStyles()\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n        setValue(newValue);\n    };\n    \n    const handleChangeIndex = (index: number) => {\n        setValue(index);\n    };\n\n    return (\n       <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\n        <Grid item sm={12} md={12} lg={12}>\n          <div className={classes.root}>\n            <AppBar position=\"static\" color=\"default\">\n              <Tabs\n                value={value}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                variant=\"fullWidth\"\n                aria-label=\"full width tabs example\"\n              >\n                <Tab label=\"Log In\" {...a11yProps(0)} />\n                <Tab label=\"Sign Up\" {...a11yProps(1)} />\n              </Tabs>\n            </AppBar>\n            <SwipeableViews\n              axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n              index={value}\n              onChangeIndex={handleChangeIndex}\n            >\n              <TabPanel value={value} index={0} dir={theme.direction}>\n                <Login/>\n              </TabPanel>\n              <TabPanel value={value} index={1} dir={theme.direction}>\n                <SignUp/>\n              </TabPanel>\n            </SwipeableViews>\n          </div>\n        </Grid>\n      </Grid>\n    )\n}\n\nexport default LoginSignUpContainer\n","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/Diaries/Diaries.tsx",["98","99","100","101","102","103","104","105","106"],"import React, {FC, useEffect, useState} from 'react';\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"./../../app_store/rootReducer\";\nimport Swal from 'sweetalert2';\nimport { addDiary } from \"./../../features/diary/diary.slice\";\nimport {setUser} from \"./../../features/auth/user.slice\";\nimport {useAppDispatch} from \"./../../app_store/store\";\nimport daysjs from 'dayjs';\nimport Divider from \"@material-ui/core/Divider\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport MailIcon from '@material-ui/icons/Mail';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { useTheme, Theme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {AppBar, Icon, Toolbar, Typography} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport {Add} from \"@material-ui/icons\";\nimport {Routes, Route } from \"react-router-dom\";\n// Components.\nimport DiaryEntriesList from \"./../DiaryEntriesList/DiaryEntriesList\";\nimport Editor from \"./../Editor/Editor\";\nimport DiaryTile from \"./../DiaryTile/DiaryTile\";\n// API.\nimport {http} from \"./../../api/index.api\";\n// Features.\nimport {clearToken, setAuthState} from \"./../../features/auth/auth.slice\";\nimport {getUserSelector} from \"./../../features/auth/user.slice\";\n// Model.\nimport {Diary} from \"./../../models/diary.interface\";\nimport {User} from \"./../../models/user.interface\";\n// Styles \nimport {diaryDrawerStyles, createDiaryBtnStyles, createDiaryBtnContainerStyles, drawerAppBarStyles} from \"./Diaries.style\";\n\n\nconst Diaries:FC = () => {\n    // Styles Classes\n    const diaryDrawerClasses = diaryDrawerStyles()\n    const diaryCreateBtnClasses = createDiaryBtnStyles()\n    const diaryCreateBtnContainerClasses = createDiaryBtnContainerStyles()\n    const diaryAppBarClasses = drawerAppBarStyles()\n    //\n    const theme = useTheme()\n    const dispatch = useAppDispatch()\n    const diaries = useSelector((state: RootState)=>state.diaries)\n    const user = useSelector((state:RootState)=>state.user)\n    // For Mobile State.\n    const [mobileOpen, setMobileOpen] = useState(false)\n    //\n    const handleDrawerToggle = () => {\n      setMobileOpen(!mobileOpen)\n    }\n    //\n    const logout = ()=>{\n      dispatch(clearToken())\n      dispatch(setAuthState(false))\n    }\n    //\n    useEffect(()=>{\n        const fetchDiaries = async () => {\n            http.get<null, Diary[]>(`/diaries/${user?.id}`).then((data)=>{\n                if (data.length > 0 && data) {\n                    console.log(\"Diaries fetched\")\n                    console.log(data)\n                    const sortByLastUpdated = data.sort((a:any, b: any) => {\n                        return daysjs(b.updatedAt).unix() - daysjs(a.updatedAt).unix()\n                    })\n                    dispatch(addDiary(sortByLastUpdated))\n                } \n            })\n        }\n        //\n        fetchDiaries()\n        console.log(\"Diaries after being fetched - Diaries\")\n        console.log(diaries)\n    },[dispatch, user])\n    //\n    const createDiary = async () => {\n        const result: any = await Swal.mixin({\n          input: 'text',\n          confirmButtonText: 'Next →',\n          showCancelButton: true,\n          progressSteps: ['1', '2'],\n        }).queue([\n          {\n            titleText: 'Diary title',\n            input: 'text',\n          },\n          {\n            titleText: 'Private or public diary?',\n            input: 'radio',\n            inputOptions: {\n              private: 'Private',\n              public: 'Public',\n            },\n            inputValue: 'private',\n          },\n        ]);\n        if (result.value) {\n          const { value } = result;\n          const {\n            diary,\n            user: _user,\n          } = await http.post<Partial<Diary>, { diary: Diary; user: User }>('/diaries/', {\n            title: value[0],\n            type: value[1],\n            userId: user?.id,\n          });\n          //\n          console.log(\"Diary\")\n          console.log(diary)\n          console.log(\"User\")\n          console.log(user)\n          console.log(\"Data from form\")\n          console.log(value)\n          if (diary && user) {\n            console.log(\"Diary and user are not empty\")\n            dispatch(addDiary([diary] as Diary[]));\n            dispatch(addDiary([diary] as Diary[]));\n            dispatch(setUser(_user));\n            //\n            return Swal.fire({\n              titleText: 'All done!',\n              confirmButtonText: 'OK!',\n            });\n          }\n        }\n        Swal.fire({\n          titleText: 'Cancelled',\n        });\n      };\n    //\n    const drawer = (\n      <div className=\"diaries-list\">\n        {/* Grid for create button  */}\n          <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" alignContent=\"center\">\n              <Routes>\n                \n                  <Route path=\":id\" element={\n                     <Grid item sm={12} md={12} lg={12}>\n                        <DiaryEntriesList/>\n                     </Grid>\n                     }>\n                  </Route>\n               \n\n                {/* <Route path=\"/\">\n                  <Grid item sm={12} md={12} lg={12}>\n                      <Button className={diaryCreateBtnClasses.button} variant=\"contained\" color=\"primary\"\n                                  size=\"large\" endIcon={<Add/>} onClick={createDiary} > Create Diary </Button>   \n          \n                    </Grid>\n                   \n                      {diaries.map((diary, index)=>(\n                        <Route path=\"/\" element={<Grid item key={index} sm={12} md={12} lg={12}>\n                            <DiaryTile key={index} diary={diary}/>   \n                        </Grid>}/>\n                      ))}\n                </Route> */}\n\n                <Route path=\"/\" element={\n                  <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" alignContent=\"center\">\n                    <Grid item sm={12} md={12} lg={12}>\n                        <Button className={diaryCreateBtnClasses.button} variant=\"contained\" color=\"primary\"\n                                    size=\"large\" endIcon={<Add/>} onClick={createDiary} > Create Diary </Button>   \n                    </Grid>\n                    {diaries.map((diary, index)=>(\n                      <Grid item key={index} sm={12} md={12} lg={12}>\n                        <DiaryTile key={index} diary={diary}/> \n                      </Grid>\n                    ))}\n                  </Grid>\n                  }>\n                </Route>\n              </Routes>   \n                  {/* <Divider />\n                      <Route path=\"/diary/:id\" element={<DiaryEntriesList/>} /> */}\n          </Grid>\n      </div>\n    );\n    //\n    return (\n        <div className=\"diaries\">\n            <div className={diaryDrawerClasses.root}>\n                <CssBaseline />\n                <AppBar position=\"fixed\" className={diaryDrawerClasses.appBar}>\n                  <Toolbar>\n                    <IconButton\n                      color=\"inherit\"\n                      aria-label=\"open drawer\"\n                      edge=\"start\"\n                      onClick={handleDrawerToggle}\n                      className={diaryDrawerClasses.menuButton}\n                    >\n                      <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={diaryDrawerClasses.appBar_text}>\n                      Entry #1\n                    </Typography>\n\n                    <Tooltip title=\"Log Out\" aria-label=\"Log Out\">\n                      <IconButton className={diaryDrawerClasses.log_out_btn} onClick={logout}>\n                        <ExitToApp/>\n                      </IconButton>\n                    </Tooltip>  \n                  </Toolbar>\n                </AppBar>\n                <nav className={diaryDrawerClasses.drawer} aria-label=\"diary-entries-list\">\n                  {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                  <Hidden smUp implementation=\"css\">\n                    <Drawer\n                      variant=\"temporary\"\n                      anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                      open={mobileOpen}\n                      onClose={handleDrawerToggle}\n                      classes={{\n                        paper: diaryDrawerClasses.drawerPaper,\n                      }}\n                      ModalProps={{\n                        keepMounted: true, // Better open performance on mobile.\n                      }}\n                    >\n                      {drawer}\n                    </Drawer>\n                  </Hidden>\n                  <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                      classes={{\n                        paper: diaryDrawerClasses.drawerPaper,\n                      }}\n                      variant=\"permanent\"\n                      open\n                    >\n                      {drawer}\n                    </Drawer>\n                  </Hidden>\n                </nav>\n                  <main className={diaryDrawerClasses.content}>\n                      <Editor/>\n                  </main>\n              </div>\n        </div>\n    )\n}\n\nexport default Diaries\n","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/Diaries/Diaries.style.ts",["107","108"],"import { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport { teal } from \"@material-ui/core/colors\";\n\nconst drawerWidth = 380;\n\nexport const diaryDrawerStyles =  makeStyles((theme: Theme) =>\n        createStyles({\n            root: {\n                display: 'flex',\n            },\n            drawer: {\n                [theme.breakpoints.up('sm')]: {\n                    width: drawerWidth,\n                    flexShrink: 0,\n                },\n            },\n            appBar: {\n                [theme.breakpoints.up('sm')]: {\n                    width: `calc(100% - ${drawerWidth}px)`,\n                    marginLeft: drawerWidth,\n                }\n            },\n            appBar_text: {\n                paddingLeft: \"inherit\",\n                fontWeight:\"bold\",\n                flexGrow:1\n            },\n            menuButton: {\n                    marginRight: theme.spacing(2),\n                    [theme.breakpoints.up('sm')]: {\n                    display: 'none',\n                },\n            },\n            log_out_btn: {\n                color: \"white\",\n                fontSize: 14\n            },\n            // necessary for content to be below app bar\n            toolbar: theme.mixins.toolbar,\n            drawerPaper: {\n                width: drawerWidth,\n            },\n            content: {\n                flexGrow: 1,\n                padding: theme.spacing(3),\n                transform: \"scale(0.95)\"\n            },\n        }),\n);\n\nexport const createDiaryBtnContainerStyles = makeStyles((theme: Theme)=>\n        createStyles({\n            root:{\n                width:\"100%\"\n            }\n        })\n)\n\nexport const createDiaryBtnStyles = makeStyles((theme: Theme)=>\n        createStyles({\n                button: {\n                    margin: theme.spacing(2,0),\n                    fontWeight: 'bold',\n                    width: \"100%\",\n                    // backgroundColor: teal[300]\n                }\n        })\n)\n\nexport const drawerAppBarStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            root: {\n                flexGrow: 1,\n                [theme.breakpoints.up('sm')]: {\n                    width: `calc(100% - ${drawerWidth}px)`,\n                    marginLeft: drawerWidth,\n                }\n            },\n            menuButton: {\n                marginRight: theme.spacing(2),\n            },\n            title: {\n                flexGrow: 1,\n            },\n        }),\n);","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/SignUp/Signup.style.tsx",["109","110","111"],"import  {createMuiTheme, createStyles, withStyles, makeStyles,Theme, ThemeProvider} from '@material-ui/core/styles';\nimport {red} from \"@material-ui/core/colors\";\n\nexport const signUpStyles = makeStyles((theme: Theme) => createStyles({\n    form_control_margin: {\n        margin: theme.spacing(1),\n    },\n    signup_btn:{\n        minWidth: 200,\n        marginTop: 30\n    },\n    text_field: {\n        minWidth: 300\n    },\n    anchor_element: {\n        textDecoration: \"none\",\n    },\n    validation_text: {\n        color:red[700]\n    }\n}))\n\nexport const snackbarStyles = makeStyles((theme: Theme) => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2)\n      },\n      paddingTop: '4rem',\n      textAlign:'center',\n    },\n}));","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/DiaryEntriesList/DiaryEntriesList.tsx",["112"],"import React, {FC, useEffect} from 'react';\nimport {useParams, Link} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport List from '@material-ui/core/List';\nimport ListItem, {ListItemProps} from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from \"@material-ui/core/Divider\";\nimport {Note} from \"@material-ui/icons\";\n// Model\nimport {Entry} from \"./../../models/entry.interface\";\n// Features.\nimport {setEntry} from \"./../../features/entry/entry.slice\";\nimport {setCurrentlyEditing, setCanEdit} from \"./../../features/entry/editor.slice\";\n// Store dispatcher and RootState.\nimport {useAppDispatch} from \"./../../app_store/store\";\nimport {RootState} from \"./../../app_store/rootReducer\";\n// API.\nimport {http} from \"./../../api/index.api\";\n// Daysjs.\nimport * as dayjs from \"dayjs\";\n\nfunction ListItemLink(props: ListItemProps<'a', { button?: true }>) {\n    return <ListItem button component=\"a\" {...props} />;\n}\n\nconst DiaryEntriesList:FC = () => {\n    const {entries} = useSelector((state: RootState) => state)\n    const dispatch = useAppDispatch()\n    const {id} = useParams() // Route Params.\n    //\n    useEffect(()=>{\n        if (id!=null) {\n            http.get<null,{entries: Entry[]}>(`/diaries/entries/${id}`)\n                .then(({entries: _entries})=>{\n                    if (_entries) {\n                        const sortByLastUpdated = _entries.sort((a:any, b:any) => {\n                          return new dayjs.Dayjs(b.updatedAt).unix() - new dayjs.Dayjs(a.updatedAt).unix()\n                        });\n                        dispatch(setEntry(sortByLastUpdated))\n                    }\n                })\n        }\n    },[id, dispatch])\n    //\n    return (\n        <div className=\"entries\">\n            <header>\n                <Link to=\"/\">Go Back</Link>\n            </header>\n            <div>\n                <List component=\"nav\" aria-label=\"diary entries list\">\n                    {entries.map((entry) => (\n                        <ListItem key={entry.id} \n                            onClick={()=>{\n                                dispatch(setCurrentlyEditing(entry))\n                                dispatch(setCanEdit(true))\n                            }}>\n                            <ListItemIcon><Note/></ListItemIcon>\n                            <ListItemText>{entry.title}</ListItemText>\n                            <Divider/>\n                        </ListItem>\n                    ))}\n                </List>\n            </div>\n        </div>\n    )\n}\n\nexport default DiaryEntriesList\n",["113","114"],"/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/Editor/Editor.style.ts",["115"],"import {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport { create } from \"yup/lib/Reference\";\n\nexport const editorTextFieldStyles = makeStyles((theme: Theme) => \n    createStyles({\n        root: {\n            '& > *': {\n              margin: theme.spacing(1, 'auto'),\n              width: '100%',\n              marginTop: 20\n            },\n        },\n    })\n)\n\nexport const editorTextAreaStyles = makeStyles((theme: Theme) => \n    createStyles({\n        root: {\n            '& > *': {\n                resize:\"both\",\n                margin: theme.spacing(1, 'auto'),\n                marginBottom:20\n            }\n        }\n    })\n)\n\nexport const editorCardStyles = makeStyles((theme: Theme)=>\n        createStyles({\n            root: {\n                paddingTop: 35,\n                maxWidth: '100%'\n            }\n        })\n)\n\nexport const editorSaveBtn = makeStyles((theme: Theme) =>\n        createStyles({\n            button: {\n                margin: theme.spacing(1, 'auto'),\n                width:\"100%\"\n            },\n        }),\n)","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/features/auth/user.slice.ts",["116"],"/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/Home/Home.tsx",["117","118","119","120","121","122"],"/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/Login/Login.tsx",["123","124","125","126","127","128","129","130"],"import React, {useState, FC} from 'react'\nimport Button from \"@material-ui/core/Button\"\nimport {Email, VpnKey, } from \"@material-ui/icons\"\nimport TextField from '@material-ui/core/TextField';\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport * as yup from \"yup\";\nimport {useFormik} from \"formik\";\nimport {Link} from \"react-router-dom\";\n// Features.\nimport {setUser} from \"./../../features/auth/user.slice\";\nimport {saveToken, setAuthState} from \"./../../features/auth/auth.slice\";\n// API.\nimport {http} from \"./../../api/index.api\";\nimport {AuthResponse} from \"./../../mock_server/server\";\n// Model.\nimport {User} from \"./../../models/user.interface\";\n// Dispatcher.\nimport {useAppDispatch} from \"./../../app_store/store\";\n// Styles.\nimport {loginStyles} from \"./Login.style\"\n// Component.\nimport Home from \"./../Home/Home\";\nimport { validateYupSchema } from 'formik';\n\n// Login form schema.\nconst login_schema = yup.object().shape({\n    username: yup.string().required('Please enter your username.'),\n    password: yup.string().required('Without a password, \"None shall pass!\"')\n})\n\nconst Login: FC = () => {\n    const classes = loginStyles()\n    const [loading, setLoading] = useState(false)\n    const [email, setEmail] = useState<String>('')\n    const [password, setPassword] = useState<String>('')\n    const dispatch = useAppDispatch()\n    // Login formik.\n    const login_formik = useFormik({\n        initialValues: {\n            username: '',\n            password: ''\n        },\n        validationSchema: login_schema,\n        onSubmit: (data:any, {resetForm}) => {\n            let path:string = \"/auth/signin\" \n            http.post<User, AuthResponse>(path,data).then((res:any) => {\n                if (res) {\n                    const {user , token} = res\n                    dispatch(saveToken(token))\n                    dispatch(setUser(user));\n                    dispatch(setAuthState(true));\n                }\n            }).catch((err:any)=>{\n                console.log(\"Login error\")\n                console.log(err)\n            }).finally(()=>{\n                setLoading(false)\n                resetForm()\n            })\n        }\n    })\n\n    return (\n        <div>\n        <form onSubmit={login_formik.handleSubmit} autoComplete=\"off\"> \n         <Grid container direction=\"column\" alignContent=\"center\" alignItems=\"center\" justify=\"center\">\n            <Grid item sm={12} md={12} lg={12}> \n            <div className={classes.form_control_margin}>\n                 <Grid container spacing={1} alignItems=\"flex-end\"> \n                     <Grid item>\n                         <Email/>\n                     </Grid> \n                     <Grid item>\n                         <TextField id=\"username\" name=\"username\" \n                                    type=\"text\" className={classes.text_field} label=\"Enter your username\" \n                                    value={login_formik.values.username} onChange={login_formik.handleChange}/>\n                     </Grid>             \n                 </Grid>\n                 {login_formik.errors.username ? <Grid container spacing={1} alignItems=\"flex-end\">\n                    <Grid item>\n                        <Typography className={classes.validation_text} \n                                    variant=\"subtitle1\">Please enter username</Typography>\n                    </Grid>\n                </Grid> : null}\n             </div>\n             <div className={classes.form_control_margin}>\n                 <Grid container spacing={1} alignItems=\"flex-end\"> \n                     <Grid item>\n                         <VpnKey/>\n                     </Grid> \n                     <Grid item>\n                         <TextField  id=\"password\" name=\"password\"\n                                     className={classes.text_field} label=\"Enter your Password\" type=\"password\"\n                                     value={login_formik.values.password} onChange={login_formik.handleChange}/>\n                     </Grid>             \n                 </Grid>\n                 {login_formik.errors.password ? <Grid container spacing={1} alignItems=\"flex-end\">\n                    <Grid item>\n                        <Typography className={classes.validation_text}\n                                    variant=\"subtitle1\">Please enter password</Typography>\n                    </Grid>\n                </Grid> : null}\n             </div>\n             </Grid>\n         </Grid>\n         <Grid container direction=\"column\" alignContent=\"center\" alignItems=\"center\" justify=\"center\">\n             <Grid item sm={12} md={12} lg={12}> \n                 <Button className={classes.login_btn} type=\"submit\"\n                     variant=\"contained\" \n                     size=\"large\" color=\"primary\">\n                    <span style={{textDecoration:\"none\", color: \"white\", fontWeight:\"bold\"}}>Log In</span>    \n                      {/* <Link to=\"/\" style={{textDecoration:\"none\", color: \"white\", fontWeight:\"bold\"}}>Log In</Link> */}\n                 </Button>\n             </Grid> \n         </Grid>\n        </form>     \n     </div>\n    )\n}\n\nexport default Login\n","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/Login/Login.style.ts",["131","132","133"],"import  {createMuiTheme, createStyles, withStyles, makeStyles,Theme, ThemeProvider} from '@material-ui/core/styles';\nimport {red} from \"@material-ui/core/colors\";\n\nexport const loginStyles = makeStyles((theme: Theme) =>\n        createStyles({\n            form_control_margin: {\n                margin: theme.spacing(1),\n            },\n            login_btn:{\n                minWidth: 200,\n                marginTop: 30\n            },\n            text_field: {\n                minWidth: 300\n            },\n            anchor_element: {\n                textDecoration: \"none\",\n            },\n            validation_text: {\n                color:red[700]\n            }\n        }),\n);","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/DiaryTile/DiaryTile.style.ts",["134"],"/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/SignUp/SignUp.tsx",["135","136","137","138","139","140","141","142"],"/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/features/diary/diary.slice.ts",["143"],"import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\n// Model.\nimport {Diary} from \"./../../models/diary.interface\";\n\nexport const diarySlice = createSlice({\n    name:\"diary\",\n    initialState:[] as Diary[],\n    reducers:{\n        addDiary(state:any, {payload}:PayloadAction<Diary[]>){\n            const diariestosave = payload.filter((diary:any) => {\n                return state.findIndex((item: any)=>(item.id == diary.id)) === -1\n            })\n            state.push(...diariestosave)\n        },\n        updateDiary(state:any, {payload}:PayloadAction<Diary>){\n            const {id} = payload\n            const diaryIndex = state.findIndex((diary:any)=>(diary.id === id))\n            if (diaryIndex !== -1) {\n                state.splice(diaryIndex, 1, payload)\n            }\n        }\n    }\n})\n\nexport const {addDiary, updateDiary} = diarySlice.actions\n\nexport default diarySlice.reducer\n\n",["144","145"],"/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/components/DiaryTile/DiaryTile.tsx",["146","147","148","149"],"import React, {FC, useState, useEffect} from 'react';\nimport {Link} from \"react-router-dom\";\nimport Paper from '@material-ui/core/Paper';\nimport {AnimationWrapper} from \"react-hover-animation\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {Add, List} from \"@material-ui/icons\";\n// Model.\nimport {Diary} from \"../../models/diary.interface\";\n// Features.\nimport {updateDiary} from \"../../features/diary/diary.slice\";\nimport {setCanEdit, setCurrentlyEditing, setActiveDiaryId} from \"../../features/entry/editor.slice\";\n// Store\nimport {useAppDispatch} from \"../../app_store/store\";\n// API\nimport {http} from \"../../api/index.api\";\n// Utilities\nimport * as dayjs from \"dayjs\";\nimport {showAlert} from \"../../mock_server/utils\";\n// Styles\nimport {diaryTilePaperStyles, diaryTileTotalEntries, diaryTileTitleStyles,\n        diaryTileAddEntryBtnStyles, diaryTileViewEntriesBtnStyles} from \"./DiaryTile.style\";\n\ninterface Props {\n    diary: Diary\n}\n\n\nconst DiaryTile:FC<Props>  = (props) => {\n    const [diary, setDiary] = useState(props.diary)\n    const [isEditing, setIsEditing] = useState(false)\n    const dispatch = useAppDispatch()\n    const totalEntries = props.diary?.entryIds?.length\n    // Classes.\n    const diarytile_paper_classes = diaryTilePaperStyles()\n    const diaryTile_total_entries_classes = diaryTileTotalEntries()\n    const diaryTile_title_classes = diaryTileTitleStyles()\n    const diaryTile_add_entry_btn_classes = diaryTileAddEntryBtnStyles()\n    const diaryTile_view_entries_btn_classes = diaryTileViewEntriesBtnStyles()\n    //\n    const saveCreate = () => {\n        http.put<Diary, Diary>(`/diaries/${diary.id}`, diary)\n            .then(diary => {\n                if (diary) {\n                    dispatch(updateDiary(diary))\n                    showAlert('Saved!', 'success');\n                }\n            }).finally(()=>{\n                setIsEditing(false)\n            })\n    }\n    //\n    const addEntryFn = () => {\n        dispatch(setCanEdit(true))\n        dispatch(setActiveDiaryId(diary.id as string))\n        dispatch(setCurrentlyEditing(null))\n    }\n    //\n    return (\n        <div>\n            <AnimationWrapper config={{\n                transform:{initial:'scale(1)',onHover:'scale(1.1)'},\n                opacity: {initial:'1',onHover:'1'}\n            }}>  \n                <Paper className={diarytile_paper_classes.root} variant=\"outlined\">\n                    <Grid container spacing={0} justify=\"flex-end\" alignItems=\"center\">\n                            <Grid item sm={12} md={12} lg={12}>\n                                <Typography className={diaryTile_title_classes.root} \n                                            variant=\"h5\" title=\"Click to Edit\" onClick={()=>{setIsEditing(true)}} \n                                            style={{cursor:\"pointer\", fontWeight:\"bold\"}}>\n                                    {isEditing ? \n                                        <TextField value={diary.title} onChange={(e)=>{\n                                                setDiary({...diary, title:diary.title})}} onKeyUp={(e)=>{\n                                                    if(e.key == \"Enter\") {\n                                                        saveCreate()\n                                                    } \n                                                }} variant=\"outlined\"/> : \n                                                <span>{diary.title}</span> }\n                                </Typography>\n                                <Typography className={diaryTile_total_entries_classes.root} \n                                            variant=\"subtitle2\" noWrap={false}>\n                                    {totalEntries ?? 0} Saved Entries\n                                </Typography><br/>\n\n                                {/* <div style={{width:\"80%\"}}>\n                                    <Fab color=\"primary\" aria-label=\"Add Entry\">\n                                        <AddIcon />\n                                    </Fab>\n\n                                    <Fab color=\"primary\" aria-label=\"Entries list\">\n                                        <List />\n                                    </Fab>\n                                </div> */}\n                        </Grid>\n                        <Grid item sm={12} md={5} lg={5}>\n                            <Tooltip title=\"Add Entry\" aria-label=\"Add Entry\">\n                                <Fab className={diaryTile_add_entry_btn_classes.root} aria-label=\"Add Entry\"\n                                    onClick={addEntryFn}>\n                                    <AddIcon />\n                                </Fab>\n                            </Tooltip>\n                        </Grid>\n                        <Grid item sm={12} md={5} lg={5}>\n                            <Link to={`/diary/${diary.id}`}>  \n                                <Tooltip title=\"Entries List\" aria-label=\"Entries List\">\n                                    <Fab className={diaryTile_view_entries_btn_classes.root} aria-label=\"Entries list\">\n                                        <List />\n                                    </Fab>\n                                </Tooltip>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </AnimationWrapper>\n        </div>\n    )\n}\n\nexport default DiaryTile\n","/Users/administrator/Desktop/data-macbook-shahzaib/Projects/diary-app-bootcamp-2020/src/features/entry/entry.slice.ts",[],{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":2,"column":26,"nodeType":"156","messageId":"157","endLine":2,"endColumn":32},{"ruleId":"150","replacedBy":"158"},{"ruleId":"152","replacedBy":"159"},{"ruleId":"154","severity":1,"message":"160","line":1,"column":20,"nodeType":"156","messageId":"157","endLine":1,"endColumn":28},{"ruleId":"154","severity":1,"message":"161","line":2,"column":8,"nodeType":"156","messageId":"157","endLine":2,"endColumn":17},{"ruleId":"154","severity":1,"message":"162","line":4,"column":10,"nodeType":"156","messageId":"157","endLine":4,"endColumn":20},{"ruleId":"154","severity":1,"message":"155","line":11,"column":26,"nodeType":"156","messageId":"157","endLine":11,"endColumn":32},{"ruleId":"154","severity":1,"message":"163","line":11,"column":34,"nodeType":"156","messageId":"157","endLine":11,"endColumn":40},{"ruleId":"154","severity":1,"message":"164","line":9,"column":8,"nodeType":"156","messageId":"157","endLine":9,"endColumn":15},{"ruleId":"154","severity":1,"message":"165","line":13,"column":8,"nodeType":"156","messageId":"157","endLine":13,"endColumn":16},{"ruleId":"154","severity":1,"message":"166","line":14,"column":8,"nodeType":"156","messageId":"157","endLine":14,"endColumn":17},{"ruleId":"154","severity":1,"message":"167","line":17,"column":20,"nodeType":"156","messageId":"157","endLine":17,"endColumn":25},{"ruleId":"154","severity":1,"message":"168","line":19,"column":17,"nodeType":"156","messageId":"157","endLine":19,"endColumn":21},{"ruleId":"154","severity":1,"message":"169","line":33,"column":9,"nodeType":"156","messageId":"157","endLine":33,"endColumn":24},{"ruleId":"154","severity":1,"message":"170","line":45,"column":11,"nodeType":"156","messageId":"157","endLine":45,"endColumn":41},{"ruleId":"154","severity":1,"message":"171","line":46,"column":11,"nodeType":"156","messageId":"157","endLine":46,"endColumn":29},{"ruleId":"172","severity":1,"message":"173","line":81,"column":7,"nodeType":"174","endLine":81,"endColumn":23,"suggestions":"175"},{"ruleId":"154","severity":1,"message":"176","line":1,"column":22,"nodeType":"156","messageId":"157","endLine":1,"endColumn":30},{"ruleId":"154","severity":1,"message":"177","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":14},{"ruleId":"154","severity":1,"message":"178","line":1,"column":10,"nodeType":"156","messageId":"157","endLine":1,"endColumn":24},{"ruleId":"154","severity":1,"message":"179","line":1,"column":40,"nodeType":"156","messageId":"157","endLine":1,"endColumn":50},{"ruleId":"154","severity":1,"message":"180","line":1,"column":70,"nodeType":"156","messageId":"157","endLine":1,"endColumn":83},{"ruleId":"154","severity":1,"message":"181","line":23,"column":10,"nodeType":"156","messageId":"157","endLine":23,"endColumn":22},{"ruleId":"150","replacedBy":"182"},{"ruleId":"152","replacedBy":"183"},{"ruleId":"154","severity":1,"message":"184","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":16},{"ruleId":"154","severity":1,"message":"184","line":2,"column":10,"nodeType":"156","messageId":"157","endLine":2,"endColumn":16},{"ruleId":"154","severity":1,"message":"163","line":3,"column":9,"nodeType":"156","messageId":"157","endLine":3,"endColumn":15},{"ruleId":"154","severity":1,"message":"185","line":3,"column":17,"nodeType":"156","messageId":"157","endLine":3,"endColumn":22},{"ruleId":"154","severity":1,"message":"186","line":4,"column":8,"nodeType":"156","messageId":"157","endLine":4,"endColumn":12},{"ruleId":"154","severity":1,"message":"187","line":6,"column":9,"nodeType":"156","messageId":"157","endLine":6,"endColumn":13},{"ruleId":"154","severity":1,"message":"188","line":8,"column":9,"nodeType":"156","messageId":"157","endLine":8,"endColumn":16},{"ruleId":"154","severity":1,"message":"189","line":10,"column":8,"nodeType":"156","messageId":"157","endLine":10,"endColumn":14},{"ruleId":"154","severity":1,"message":"190","line":9,"column":9,"nodeType":"156","messageId":"157","endLine":9,"endColumn":13},{"ruleId":"154","severity":1,"message":"191","line":23,"column":8,"nodeType":"156","messageId":"157","endLine":23,"endColumn":12},{"ruleId":"154","severity":1,"message":"192","line":24,"column":10,"nodeType":"156","messageId":"157","endLine":24,"endColumn":27},{"ruleId":"154","severity":1,"message":"193","line":34,"column":12,"nodeType":"156","messageId":"157","endLine":34,"endColumn":19},{"ruleId":"154","severity":1,"message":"194","line":35,"column":12,"nodeType":"156","messageId":"157","endLine":35,"endColumn":17},{"ruleId":"154","severity":1,"message":"195","line":35,"column":19,"nodeType":"156","messageId":"157","endLine":35,"endColumn":27},{"ruleId":"154","severity":1,"message":"196","line":36,"column":12,"nodeType":"156","messageId":"157","endLine":36,"endColumn":20},{"ruleId":"154","severity":1,"message":"197","line":36,"column":22,"nodeType":"156","messageId":"157","endLine":36,"endColumn":33},{"ruleId":"154","severity":1,"message":"178","line":1,"column":10,"nodeType":"156","messageId":"157","endLine":1,"endColumn":24},{"ruleId":"154","severity":1,"message":"179","line":1,"column":40,"nodeType":"156","messageId":"157","endLine":1,"endColumn":50},{"ruleId":"154","severity":1,"message":"180","line":1,"column":70,"nodeType":"156","messageId":"157","endLine":1,"endColumn":83},{"ruleId":"154","severity":1,"message":"176","line":1,"column":22,"nodeType":"156","messageId":"157","endLine":1,"endColumn":30},{"ruleId":"154","severity":1,"message":"198","line":2,"column":9,"nodeType":"156","messageId":"157","endLine":2,"endColumn":20},{"ruleId":"154","severity":1,"message":"199","line":12,"column":8,"nodeType":"156","messageId":"157","endLine":12,"endColumn":13},{"ruleId":"154","severity":1,"message":"190","line":13,"column":9,"nodeType":"156","messageId":"157","endLine":13,"endColumn":13},{"ruleId":"154","severity":1,"message":"200","line":19,"column":9,"nodeType":"156","messageId":"157","endLine":19,"endColumn":15},{"ruleId":"154","severity":1,"message":"201","line":25,"column":25,"nodeType":"156","messageId":"157","endLine":25,"endColumn":30},{"ruleId":"154","severity":1,"message":"191","line":29,"column":8,"nodeType":"156","messageId":"157","endLine":29,"endColumn":12},{"ruleId":"154","severity":1,"message":"193","line":39,"column":12,"nodeType":"156","messageId":"157","endLine":39,"endColumn":19},{"ruleId":"154","severity":1,"message":"202","line":41,"column":11,"nodeType":"156","messageId":"157","endLine":41,"endColumn":19},{"ruleId":"203","severity":1,"message":"204","line":11,"column":62,"nodeType":"205","messageId":"206","endLine":11,"endColumn":64},{"ruleId":"150","replacedBy":"207"},{"ruleId":"152","replacedBy":"208"},{"ruleId":"154","severity":1,"message":"209","line":1,"column":30,"nodeType":"156","messageId":"157","endLine":1,"endColumn":39},{"ruleId":"154","severity":1,"message":"210","line":11,"column":9,"nodeType":"156","messageId":"157","endLine":11,"endColumn":12},{"ruleId":"154","severity":1,"message":"211","line":22,"column":13,"nodeType":"156","messageId":"157","endLine":22,"endColumn":18},{"ruleId":"203","severity":1,"message":"204","line":78,"column":62,"nodeType":"205","messageId":"206","endLine":78,"endColumn":64},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"@typescript-eslint/no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar",["212"],["213"],"'useState' is defined but never used.","'PropTypes' is defined but never used.","'makeStyles' is defined but never used.","'Routes' is defined but never used.","'Divider' is defined but never used.","'MailIcon' is defined but never used.","'InboxIcon' is defined but never used.","'Theme' is defined but never used.","'Icon' is defined but never used.","'getUserSelector' is defined but never used.","'diaryCreateBtnContainerClasses' is assigned a value but never used.","'diaryAppBarClasses' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'diaries'. Either include it or remove the dependency array.","ArrayExpression",["214"],"'useTheme' is defined but never used.","'teal' is defined but never used.","'createMuiTheme' is defined but never used.","'withStyles' is defined but never used.","'ThemeProvider' is defined but never used.","'ListItemLink' is defined but never used.",["212"],["213"],"'create' is defined but never used.","'Route' is defined but never used.","'Swal' is defined but never used.","'http' is defined but never used.","'setUser' is defined but never used.","'Editor' is defined but never used.","'Link' is defined but never used.","'Home' is defined but never used.","'validateYupSchema' is defined but never used.","'loading' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'useDispatch' is defined but never used.","'axios' is defined but never used.","'signup' is defined but never used.","'store' is defined but never used.","'navigate' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["212"],["213"],"'useEffect' is defined but never used.","'Add' is defined but never used.","'dayjs' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},"Update the dependencies array to be: [diaries, dispatch, user]",{"range":"217","text":"218"},[3297,3313],"[diaries, dispatch, user]"]