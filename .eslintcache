[{"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\reportWebVitals.ts":"1","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\GridComponent\\Grid.tsx":"2","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\features\\entry\\editor.slice.ts":"3","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\Login\\Login.style.ts":"4","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\Editor\\Editor.style.ts":"5","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\mock_server\\controllers\\entry.controller.ts":"6","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\Diaries\\Diaries.tsx":"7","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\mock_server\\server.ts":"8","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\mock_server\\controllers\\user.controller.ts":"9","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\index.tsx":"10","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\app_store\\rootReducer.ts":"11","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\AppContainer\\AppContainer.tsx":"12","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\features\\auth\\auth.slice.ts":"13","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\features\\entry\\entry.slice.ts":"14","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\features\\auth\\user.slice.ts":"15","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\features\\diary\\diary.slice.ts":"16","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\Home\\Home.tsx":"17","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\LoginSignUpContainer\\LoginSignUpContainer.tsx":"18","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\LoginSignUpContainer\\LoginSignUpContainer.style.ts":"19","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\SignUp\\SignUp.tsx":"20","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\Login\\Login.tsx":"21","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\Diaries\\Diaries.style.ts":"22","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\api\\index.api.ts":"23","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\SignUp\\Signup.style.tsx":"24","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\Editor\\Editor.tsx":"25","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\mock_server\\utils.ts":"26","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\DiaryEntriesList\\DiaryEntriesList.tsx":"27","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\App.tsx":"28","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\app_store\\store.ts":"29"},{"size":440,"mtime":1613994725911,"results":"30","hashOfConfig":"31"},{"size":459,"mtime":1613994725878,"results":"32","hashOfConfig":"31"},{"size":1008,"mtime":1613994725899,"results":"33","hashOfConfig":"31"},{"size":703,"mtime":1613994725887,"results":"34","hashOfConfig":"31"},{"size":1105,"mtime":1613994725877,"results":"35","hashOfConfig":"31"},{"size":1711,"mtime":1613994725903,"results":"36","hashOfConfig":"31"},{"size":8575,"mtime":1614250229200,"results":"37","hashOfConfig":"31"},{"size":2137,"mtime":1613994725906,"results":"38","hashOfConfig":"31"},{"size":1307,"mtime":1613994725904,"results":"39","hashOfConfig":"31"},{"size":799,"mtime":1613994725901,"results":"40","hashOfConfig":"31"},{"size":638,"mtime":1613994725868,"results":"41","hashOfConfig":"31"},{"size":977,"mtime":1613994725870,"results":"42","hashOfConfig":"31"},{"size":806,"mtime":1613994725895,"results":"43","hashOfConfig":"31"},{"size":765,"mtime":1613994725899,"results":"44","hashOfConfig":"31"},{"size":503,"mtime":1613994725896,"results":"45","hashOfConfig":"31"},{"size":931,"mtime":1613994725897,"results":"46","hashOfConfig":"31"},{"size":797,"mtime":1613994725887,"results":"47","hashOfConfig":"31"},{"size":3147,"mtime":1613994725891,"results":"48","hashOfConfig":"31"},{"size":392,"mtime":1613994725890,"results":"49","hashOfConfig":"31"},{"size":7607,"mtime":1613994725893,"results":"50","hashOfConfig":"31"},{"size":5052,"mtime":1613994725888,"results":"51","hashOfConfig":"31"},{"size":2553,"mtime":1613994725871,"results":"52","hashOfConfig":"31"},{"size":1050,"mtime":1613994725867,"results":"53","hashOfConfig":"31"},{"size":793,"mtime":1613994725894,"results":"54","hashOfConfig":"31"},{"size":3990,"mtime":1613994725877,"results":"55","hashOfConfig":"31"},{"size":572,"mtime":1613994725907,"results":"56","hashOfConfig":"31"},{"size":2449,"mtime":1613994725874,"results":"57","hashOfConfig":"31"},{"size":412,"mtime":1613994725866,"results":"58","hashOfConfig":"31"},{"size":351,"mtime":1613994725869,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1v7flyc",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"65"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"65"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"65"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"65"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"65"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"65"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"65"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"65"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"65"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"65"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"65"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"65"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"65"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\reportWebVitals.ts",[],["137","138"],"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\GridComponent\\Grid.tsx",[],["139","140"],"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\features\\entry\\editor.slice.ts",[],"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\Login\\Login.style.ts",["141","142","143"],"import  {createMuiTheme, createStyles, withStyles, makeStyles,Theme, ThemeProvider} from '@material-ui/core/styles';\r\nimport {red} from \"@material-ui/core/colors\";\r\n\r\nexport const loginStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            form_control_margin: {\r\n                margin: theme.spacing(1),\r\n            },\r\n            login_btn:{\r\n                minWidth: 200,\r\n                marginTop: 30\r\n            },\r\n            text_field: {\r\n                minWidth: 300\r\n            },\r\n            anchor_element: {\r\n                textDecoration: \"none\",\r\n            },\r\n            validation_text: {\r\n                color:red[700]\r\n            }\r\n        }),\r\n);","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\Editor\\Editor.style.ts",["144"],"import {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport { create } from \"yup/lib/Reference\";\r\n\r\nexport const editorTextFieldStyles = makeStyles((theme: Theme) => \r\n    createStyles({\r\n        root: {\r\n            '& > *': {\r\n              margin: theme.spacing(1, 'auto'),\r\n              width: '100%',\r\n              marginTop: 20\r\n            },\r\n        },\r\n    })\r\n)\r\n\r\nexport const editorTextAreaStyles = makeStyles((theme: Theme) => \r\n    createStyles({\r\n        root: {\r\n            '& > *': {\r\n                resize:\"both\",\r\n                margin: theme.spacing(1, 'auto'),\r\n                marginBottom:20\r\n            }\r\n        }\r\n    })\r\n)\r\n\r\nexport const editorCardStyles = makeStyles((theme: Theme)=>\r\n        createStyles({\r\n            root: {\r\n                paddingTop: 35,\r\n                maxWidth: '100%'\r\n            }\r\n        })\r\n)\r\n\r\nexport const editorSaveBtn = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            button: {\r\n                margin: theme.spacing(1, 'auto'),\r\n                width:\"100%\"\r\n            },\r\n        }),\r\n)","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\mock_server\\controllers\\entry.controller.ts",[],"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\Diaries\\Diaries.tsx",["145","146","147","148","149","150","151","152","153"],"import React, {FC, useEffect, useState} from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootState} from \"./../../app_store/rootReducer\";\r\nimport Swal from 'sweetalert2';\r\nimport { addDiary } from \"./../../features/diary/diary.slice\";\r\nimport {setUser} from \"./../../features/auth/user.slice\";\r\nimport {useAppDispatch} from \"./../../app_store/store\";\r\nimport dayjs from 'dayjs';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { useTheme, Theme } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport {AppBar, Icon, Toolbar, Typography} from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport {Add} from \"@material-ui/icons\";\r\nimport {Routes, Route} from \"react-router-dom\";\r\n// Components.\r\nimport DiaryEntriesList from \"./../DiaryEntriesList/DiaryEntriesList\";\r\nimport Editor from \"./../Editor/Editor\";\r\nimport DiaryTile from \"./../DiaryTile/DiaryTile\";\r\n// API.\r\nimport {http} from \"./../../api/index.api\";\r\n// Model.\r\nimport {Diary} from \"./../../models/diary.interface\";\r\nimport {User} from \"./../../models/user.interface\";\r\n// Styles \r\nimport {diaryDrawerStyles, createDiaryBtnStyles, createDiaryBtnContainerStyles, drawerAppBarStyles} from \"./Diaries.style\";\r\n\r\n\r\ninterface Props {\r\n  windows?: () => Window\r\n}\r\n\r\nconst Diaries:FC<Props> = (props: Props) => {\r\n    const { windows } = props\r\n    // Styles Classes\r\n    const diaryDrawerClasses = diaryDrawerStyles()\r\n    const diaryCreateBtnClasses = createDiaryBtnStyles()\r\n    const diaryCreateBtnContainerClasses = createDiaryBtnContainerStyles()\r\n    const diaryAppBarClasses = drawerAppBarStyles()\r\n    //\r\n    const theme = useTheme()\r\n    const dispatch = useAppDispatch()\r\n    const {diaries} = useSelector((state: RootState)=>state)\r\n    const {user} = useSelector((state:RootState)=>state)\r\n    // For Mobile State.\r\n    const [mobileOpen, setMobileOpen] = useState(false)\r\n    //\r\n    const handleDrawerToggle = () => {\r\n      setMobileOpen(!mobileOpen)\r\n    }\r\n    //\r\n    useEffect(()=>{\r\n        const fetchDiaries = async () => {\r\n            http.get<null, Diary[]>(`/diaries/${user?.id}`).then((data)=>{\r\n                if (data.length > 0 && data) {\r\n                    const sortByLastUpdated = data.sort((a:any, b: any) => {\r\n                        return new dayjs.Dayjs(b.updatedAt).unix() - new dayjs.Dayjs(a.updatedAt).unix()\r\n                    })\r\n                    dispatch(addDiary(sortByLastUpdated))\r\n                } \r\n            })\r\n        }\r\n        //\r\n        fetchDiaries()\r\n    },[dispatch, user])\r\n    //\r\n    const createDiary = async () => {\r\n        const result: any = await Swal.mixin({\r\n          input: 'text',\r\n          confirmButtonText: 'Next →',\r\n          showCancelButton: true,\r\n          progressSteps: ['1', '2'],\r\n        }).queue([\r\n          {\r\n            titleText: 'Diary title',\r\n            input: 'text',\r\n          },\r\n          {\r\n            titleText: 'Private or public diary?',\r\n            input: 'radio',\r\n            inputOptions: {\r\n              private: 'Private',\r\n              public: 'Public',\r\n            },\r\n            inputValue: 'private',\r\n          },\r\n        ]);\r\n        if (result.value) {\r\n          const { value } = result;\r\n          const {\r\n            diary,\r\n            user: _user,\r\n          } = await http.post<Partial<Diary>, { diary: Diary; user: User }>('/diaries/', {\r\n            title: value[0],\r\n            type: value[1],\r\n            userId: user?.id,\r\n          });\r\n          if (diary && user) {\r\n            dispatch(addDiary([diary] as Diary[]));\r\n            dispatch(addDiary([diary] as Diary[]));\r\n            dispatch(setUser(_user));\r\n            return Swal.fire({\r\n              titleText: 'All done!',\r\n              confirmButtonText: 'OK!',\r\n            });\r\n          }\r\n        }\r\n        Swal.fire({\r\n          titleText: 'Cancelled',\r\n        });\r\n      };\r\n    //\r\n    const drawer = (\r\n      <div>\r\n        <Routes>\r\n        {/* Grid for create button  */}\r\n          <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n            <Grid item sm={12} md={12} lg={12}>\r\n              {/* <div className={diaryCreateBtnContainerClasses.root}> */}\r\n              {/* <DiaryTile diary={{title:'First Diary', type:'public', entryIds:[]}}/>    */}\r\n              {/* <Route path=\"/diary/:id\"></Route>     */}\r\n              <Route path=\"/\">\r\n                <Button className={diaryCreateBtnClasses.button} variant=\"contained\" color=\"primary\"\r\n                        size=\"large\" endIcon={<Add/>} onClick={createDiary} > Create Diary </Button>\r\n                {/* <DiaryTile diary={{title:'First Diary', type:'public', entryIds:[]}}/>        */}\r\n              </Route>          \r\n              {/* </div> */}\r\n            </Grid>  \r\n          </Grid>    \r\n\r\n          <Divider />\r\n              <Route path=\"/diary/:id\"><DiaryEntriesList/></Route>\r\n          {/* <List>\r\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List> */}\r\n          <Divider />\r\n        </Routes>\r\n      </div>\r\n    );\r\n    //\r\n    const container = window !== undefined ? () => window.document.body : undefined;\r\n    //\r\n    return (\r\n        <div className=\"diaries\">\r\n            <div className={diaryDrawerClasses.root}>\r\n                <CssBaseline />\r\n                <AppBar position=\"fixed\" className={diaryDrawerClasses.appBar}>\r\n                  <Toolbar>\r\n                    <IconButton\r\n                      color=\"inherit\"\r\n                      aria-label=\"open drawer\"\r\n                      edge=\"start\"\r\n                      onClick={handleDrawerToggle}\r\n                      className={diaryDrawerClasses.menuButton}\r\n                    >\r\n                      <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={diaryDrawerClasses.appBar_text}>\r\n                      Entry #1\r\n                    </Typography>\r\n\r\n                    <Tooltip title=\"Log Out\" aria-label=\"Log Out\">\r\n                      <IconButton className={diaryDrawerClasses.log_out_btn}>\r\n                        <ExitToApp/>\r\n                      </IconButton>\r\n                    </Tooltip>  \r\n                  </Toolbar>\r\n                </AppBar>\r\n                <nav className={diaryDrawerClasses.drawer} aria-label=\"diary-entries-list\">\r\n                  {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                  <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                      container={container}\r\n                      variant=\"temporary\"\r\n                      anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                      open={mobileOpen}\r\n                      onClose={handleDrawerToggle}\r\n                      classes={{\r\n                        paper: diaryDrawerClasses.drawerPaper,\r\n                      }}\r\n                      ModalProps={{\r\n                        keepMounted: true, // Better open performance on mobile.\r\n                      }}\r\n                    >\r\n                      {drawer}\r\n                    </Drawer>\r\n                  </Hidden>\r\n                  <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                      classes={{\r\n                        paper: diaryDrawerClasses.drawerPaper,\r\n                      }}\r\n                      variant=\"permanent\"\r\n                      open\r\n                    >\r\n                      {drawer}\r\n                    </Drawer>\r\n                  </Hidden>\r\n                </nav>\r\n                  <main className={diaryDrawerClasses.content}>\r\n                      <Editor/>\r\n                  </main>\r\n              </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Diaries\r\n","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\mock_server\\server.ts",["154","155"],"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\mock_server\\controllers\\user.controller.ts",[],["156","157"],"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\index.tsx",["158"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n// Mock Server.\r\nimport mockServer from \"./../src/mock_server/server\"\r\n// Service Worker.\r\nimport sw from \"./swDev\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n// Run Mock Server.\r\nif (process.env.NODE_ENV === \"development\") {\r\n  console.log(\"Mock server is running.\")\r\n  mockServer()\r\n}\r\n// Register service worker.\r\n// sw()","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\app_store\\rootReducer.ts",[],"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\AppContainer\\AppContainer.tsx",[],"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\features\\auth\\auth.slice.ts",[],"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\features\\entry\\entry.slice.ts",[],"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\features\\auth\\user.slice.ts",["159"],"import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport { create } from \"domain\";\r\n// Model.\r\nimport {User} from \"./../../models/user.interface\";\r\n\r\nexport const userSlice = createSlice({\r\n    name: \"user\",\r\n    initialState: null as User | null,\r\n    reducers: {\r\n        setUser (state:any, {payload}: PayloadAction<User|null>){\r\n            state = (payload != null) ? payload : null\r\n        }\r\n    }\r\n})\r\n\r\nexport const {setUser} = userSlice.actions\r\n\r\nexport default userSlice.reducer","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\features\\diary\\diary.slice.ts",["160"],"import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\n// Model.\r\nimport {Diary} from \"./../../models/diary.interface\";\r\n\r\nexport const diarySlice = createSlice({\r\n    name:\"diary\",\r\n    initialState:[] as Diary[],\r\n    reducers:{\r\n        addDiary(state:any, {payload}:PayloadAction<Diary[]>){\r\n            const diariestosave = payload.filter((diary:any) => {\r\n                return state.findIndex((item: any)=>(item.id == diary.id)) === -1\r\n            })\r\n            state.push(...diariestosave)\r\n        },\r\n        updateDiary(state:any, {payload}:PayloadAction<Diary>){\r\n            const {id} = payload\r\n            const diaryIndex = state.findIndex((diary:any)=>(diary.id === id))\r\n            if (diaryIndex !== -1) {\r\n                state.splice(diaryIndex, 1, payload)\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const {addDiary, updateDiary} = diarySlice.actions\r\n\r\nexport default diarySlice.reducer\r\n\r\n","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\Home\\Home.tsx",["161","162","163","164","165","166"],"import React, { FC } from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {Routes, Route} from \"react-router-dom\";\r\nimport Swal from 'sweetalert2';\r\n// API.\r\nimport {http} from \"./../../api/index.api\";\r\n// Features.\r\nimport {setUser} from \"./../../features/auth/user.slice\";\r\n// Components.\r\nimport Editor from \"./../Editor/Editor\";\r\nimport Diaries from \"./../Diaries/Diaries\";\r\n\r\nconst Home:FC = () => {\r\n    return (\r\n       <Grid container>\r\n           <Grid item sm={12} md={12} lg={12}>\r\n               <Diaries/>\r\n           </Grid>\r\n            {/* <Grid item sm={12} md={12} lg={12}>\r\n                <div style={{paddingTop:5, paddingBottom:5}}>\r\n                    <Editor/>\r\n                </div>\r\n            </Grid> */}\r\n       </Grid> \r\n    )\r\n}\r\n\r\nexport default Home","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\LoginSignUpContainer\\LoginSignUpContainer.tsx",["167","168","169","170","171"],"import React, {FC, useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {BrowserRouter as Router, Routes} from \"react-router-dom\";\r\n// Styles.\r\nimport {LoginSignUpContainerStyles} from \"./LoginSignUpContainer.style\"\r\nimport Login from \"./../Login/Login\"; // Log In Component\r\nimport SignUp from \"./../SignUp/SignUp\"; // Sign Up Component\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    dir?: string;\r\n    index: any;\r\n    value: any;\r\n}\r\n  \r\nfunction TabPanel(props: TabPanelProps) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`full-width-tabpanel-${index}`}\r\n        aria-labelledby={`full-width-tab-${index}`}\r\n        {...other}\r\n        >\r\n        {value === index && (\r\n            <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n            </Box>\r\n        )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n    return {\r\n      id: `full-width-tab-${index}`,\r\n      'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst LoginSignUpContainer:FC = () => {\r\n    const classes = LoginSignUpContainerStyles()\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n    \r\n    const handleChangeIndex = (index: number) => {\r\n        setValue(index);\r\n    };\r\n\r\n    return (\r\n       <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n        <Grid item sm={12} md={12} lg={12}>\r\n          <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n              <Tabs\r\n                value={value}\r\n                onChange={handleChange}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                variant=\"fullWidth\"\r\n                aria-label=\"full width tabs example\"\r\n              >\r\n                <Tab label=\"Log In\" {...a11yProps(0)} />\r\n                <Tab label=\"Sign Up\" {...a11yProps(1)} />\r\n              </Tabs>\r\n            </AppBar>\r\n            <SwipeableViews\r\n              axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n              index={value}\r\n              onChangeIndex={handleChangeIndex}\r\n            >\r\n              <TabPanel value={value} index={0} dir={theme.direction}>\r\n                <Login/>\r\n              </TabPanel>\r\n              <TabPanel value={value} index={1} dir={theme.direction}>\r\n                <SignUp/>\r\n              </TabPanel>\r\n            </SwipeableViews>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n}\r\n\r\nexport default LoginSignUpContainer\r\n","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\LoginSignUpContainer\\LoginSignUpContainer.style.ts",["172","173","174","175"],"import  {createMuiTheme, createStyles, withStyles, makeStyles,Theme, ThemeProvider} from '@material-ui/core/styles';\r\n\r\nexport const LoginSignUpContainerStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      width: 500,\r\n      marginTop:\"30%\",\r\n      marginBottom:\"50%\",\r\n      borderRadius: 10,\r\n      opacity: 0.95\r\n    },\r\n}));","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\SignUp\\SignUp.tsx",["176","177","178","179","180","181"],"import React, {useState, FC } from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Email, VpnKey} from \"@material-ui/icons\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport * as yup from \"yup\";\r\nimport {useFormik} from \"formik\";\r\nimport axios from \"axios\";\r\n// Features.\r\nimport {setUser} from \"./../../features/auth/user.slice\";\r\nimport {saveToken, setAuthState} from \"./../../features/auth/auth.slice\";\r\n// API.\r\nimport {signup} from \"./../../api/user.api\";\r\nimport {http} from \"./../../api/index.api\";\r\nimport {AuthResponse} from \"./../../mock_server/server\";\r\n// Model.\r\nimport {User} from \"./../../models/user.interface\";\r\n// Dispatcher.\r\nimport {useAppDispatch, store} from \"./../../app_store/store\";\r\n// Styles\r\nimport {signUpStyles, snackbarStyles} from \"./Signup.style\";\r\n// Component.\r\nimport Home from \"./../Home/Home\";\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst SignUp: FC = () => {\r\n    const classes = signUpStyles()\r\n    const snackbar_classes = snackbarStyles()\r\n    const [open, setOpen] = useState<boolean>(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    // Snackbar handlers.\r\n    const handleClick = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    // Formik\r\n    const signup_formik = useFormik({\r\n        initialValues: {\r\n            username: '',\r\n            password: '',\r\n            email: ''\r\n        },\r\n        validationSchema: yup.object().shape({\r\n            username: yup.string().required('Please enter a username.').max(16, 'Username cannot be longer than 16 characters'),\r\n            password: yup.string().required('Without a password, \"None shall pass!\"'),\r\n            email: yup.string().required().email('Please provide a valid email address (abc@xy.z)')\r\n        }),\r\n        onSubmit: (data, {resetForm}) => {\r\n            const path = \"/auth/create\"\r\n            console.log(\"Attempting to signup.\")\r\n            console.log(data)\r\n            http.post<User, AuthResponse>(path,data).then(async (res) => {\r\n                if (res) {\r\n                  const { user, token } = res;\r\n                  dispatch(saveToken(token));\r\n                  dispatch(setUser(user));\r\n                  dispatch(setAuthState(true))\r\n                }\r\n              }).catch((err:any)=>{\r\n                console.log(\"Signup error\")\r\n                console.log(err)\r\n                resetForm()\r\n            }).finally(()=>{\r\n                console.log(\"Cleaning up.\")\r\n                handleClick()\r\n                setLoading(false)\r\n                resetForm()\r\n            })\r\n        }\r\n    })\r\n    //\r\n    return (\r\n    <div>\r\n        <div>\r\n            <form onSubmit={signup_formik.handleSubmit} autoComplete=\"off\"> \r\n                <Grid container direction=\"column\" alignContent=\"center\" alignItems=\"center\" justify=\"center\">\r\n                <Grid item sm={12} md={12} lg={12}> \r\n                <div className={classes.form_control_margin}>\r\n                        <Grid container spacing={1} alignItems=\"flex-end\"> \r\n                            <Grid item>\r\n                                <AccountCircle/>\r\n                            </Grid> \r\n                            <Grid item>\r\n                                <TextField id=\"username\" name=\"username\"\r\n                                        type=\"text\" className={classes.text_field} label=\"Enter your Username\" \r\n                                        value={signup_formik.values.username} onChange={signup_formik.handleChange}/>\r\n                            </Grid>             \r\n                        </Grid>\r\n                        {signup_formik.errors.username ? <Grid container spacing={1} alignItems=\"flex-end\">\r\n                            <Grid item>\r\n                                <Typography className={classes.validation_text} \r\n                                            variant=\"subtitle1\">Please enter username</Typography>\r\n                            </Grid>\r\n                        </Grid> : null}\r\n                    </div>\r\n                    <div className={classes.form_control_margin}>\r\n                        <Grid container spacing={1} alignItems=\"flex-end\"> \r\n                            <Grid item>\r\n                                <Email/>\r\n                            </Grid> \r\n                            <Grid item>\r\n                                <TextField  id=\"email\" name=\"email\"\r\n                                            type=\"text\" className={classes.text_field} label=\"Enter your Email\" \r\n                                            value={signup_formik.values.email} onChange={signup_formik.handleChange}/>\r\n                            </Grid>             \r\n                        </Grid>\r\n                        {signup_formik.errors.email ? <Grid container spacing={1} alignItems=\"flex-end\">\r\n                            <Grid item>\r\n                                <Typography className={classes.validation_text}\r\n                                            variant=\"subtitle1\">Please enter E-mail</Typography>\r\n                            </Grid>\r\n                        </Grid> : null}\r\n                    </div>\r\n                    <div className={classes.form_control_margin}>\r\n                        <Grid container spacing={1} alignItems=\"flex-end\"> \r\n                            <Grid item>\r\n                                <VpnKey/>\r\n                            </Grid> \r\n                            <Grid item>\r\n                                <TextField  id=\"password\" name=\"password\"\r\n                                            className={classes.text_field} label=\"Enter your Password\" type=\"password\"\r\n                                            value={signup_formik.values.password} onChange={signup_formik.handleChange}/>\r\n                            </Grid>             \r\n                        </Grid>\r\n                        {signup_formik.errors.password ? <Grid container spacing={1} alignItems=\"flex-end\">\r\n                            <Grid item>\r\n                                <Typography className={classes.validation_text}\r\n                                            variant=\"subtitle1\">Please enter password</Typography>\r\n                            </Grid>\r\n                        </Grid> : null}\r\n                    </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"column\" alignContent=\"center\" alignItems=\"center\" justify=\"center\">\r\n                    <Grid item sm={12} md={12} lg={12}> \r\n                        <Button className={classes.signup_btn} type=\"submit\"\r\n                            variant=\"contained\" \r\n                            size=\"large\"\r\n                            color=\"secondary\">\r\n                            Sign Up\r\n                        </Button>\r\n                    </Grid> \r\n                </Grid>\r\n            </form>  \r\n       </div>\r\n        { \r\n            open ? \r\n             <div className={snackbar_classes.root}>\r\n                    <Alert variant=\"filled\" severity=\"success\">\r\n                            Signed up successfully! Please log in.\r\n                    </Alert>\r\n            </div> :  null\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default SignUp\r\n","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\Login\\Login.tsx",["182","183","184","185","186","187","188"],"import React, {useState, FC} from 'react'\r\nimport Button from \"@material-ui/core/Button\"\r\nimport {Email, VpnKey, } from \"@material-ui/icons\"\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport * as yup from \"yup\";\r\nimport {useFormik} from \"formik\";\r\n// Features.\r\n// Features.\r\nimport {setUser} from \"./../../features/auth/user.slice\";\r\nimport {saveToken, setAuthState} from \"./../../features/auth/auth.slice\";\r\n// API.\r\nimport {http} from \"./../../api/index.api\";\r\nimport {AuthResponse} from \"./../../mock_server/server\";\r\n// Model.\r\nimport {User} from \"./../../models/user.interface\";\r\n// Dispatcher.\r\nimport {useAppDispatch} from \"./../../app_store/store\";\r\n// Styles.\r\nimport {loginStyles} from \"./Login.style\"\r\n// Component.\r\nimport Home from \"./../Home/Home\";\r\nimport { validateYupSchema } from 'formik';\r\n\r\n// Login form schema.\r\nconst login_schema = yup.object().shape({\r\n    username: yup.string().required('Please enter your username.'),\r\n    password: yup.string().required('Without a password, \"None shall pass!\"')\r\n})\r\n\r\nconst Login: FC = () => {\r\n    const classes = loginStyles()\r\n    const [loading, setLoading] = useState(false)\r\n    const [email, setEmail] = useState<String>('')\r\n    const [password, setPassword] = useState<String>('')\r\n    const dispatch = useAppDispatch()\r\n    // Login formik.\r\n    const login_formik = useFormik({\r\n        initialValues: {\r\n            username: '',\r\n            password: ''\r\n        },\r\n        validationSchema: login_schema,\r\n        onSubmit: (data:any, {resetForm}) => {\r\n            let path:string = \"/auth/signin\" \r\n            http.post<User, AuthResponse>(path,data).then((res:any) => {\r\n                if (res) {\r\n                    const {user , token} = res\r\n                    dispatch(saveToken(token))\r\n                    dispatch(setUser(user));\r\n                    dispatch(setAuthState(true));\r\n                }\r\n            }).catch((err:any)=>{\r\n                console.log(\"Login error\")\r\n                console.log(err)\r\n            }).finally(()=>{\r\n                setLoading(false)\r\n                resetForm()\r\n            })\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n        <form onSubmit={login_formik.handleSubmit} autoComplete=\"off\"> \r\n         <Grid container direction=\"column\" alignContent=\"center\" alignItems=\"center\" justify=\"center\">\r\n            <Grid item sm={12} md={12} lg={12}> \r\n            <div className={classes.form_control_margin}>\r\n                 <Grid container spacing={1} alignItems=\"flex-end\"> \r\n                     <Grid item>\r\n                         <Email/>\r\n                     </Grid> \r\n                     <Grid item>\r\n                         <TextField id=\"username\" name=\"username\" \r\n                                    type=\"text\" className={classes.text_field} label=\"Enter your username\" \r\n                                    value={login_formik.values.username} onChange={login_formik.handleChange}/>\r\n                     </Grid>             \r\n                 </Grid>\r\n                 {login_formik.errors.username ? <Grid container spacing={1} alignItems=\"flex-end\">\r\n                    <Grid item>\r\n                        <Typography className={classes.validation_text} \r\n                                    variant=\"subtitle1\">Please enter username</Typography>\r\n                    </Grid>\r\n                </Grid> : null}\r\n             </div>\r\n             <div className={classes.form_control_margin}>\r\n                 <Grid container spacing={1} alignItems=\"flex-end\"> \r\n                     <Grid item>\r\n                         <VpnKey/>\r\n                     </Grid> \r\n                     <Grid item>\r\n                         <TextField  id=\"password\" name=\"password\"\r\n                                     className={classes.text_field} label=\"Enter your Password\" type=\"password\"\r\n                                     value={login_formik.values.password} onChange={login_formik.handleChange}/>\r\n                     </Grid>             \r\n                 </Grid>\r\n                 {login_formik.errors.password ? <Grid container spacing={1} alignItems=\"flex-end\">\r\n                    <Grid item>\r\n                        <Typography className={classes.validation_text}\r\n                                    variant=\"subtitle1\">Please enter password</Typography>\r\n                    </Grid>\r\n                </Grid> : null}\r\n             </div>\r\n             </Grid>\r\n         </Grid>\r\n         <Grid container direction=\"column\" alignContent=\"center\" alignItems=\"center\" justify=\"center\">\r\n             <Grid item sm={12} md={12} lg={12}> \r\n                 <Button className={classes.login_btn} type=\"submit\"\r\n                     variant=\"contained\" \r\n                     size=\"large\" color=\"primary\">\r\n                     Log In\r\n                 </Button>\r\n             </Grid> \r\n         </Grid>\r\n        </form>     \r\n     </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\Diaries\\Diaries.style.ts",["189"],"import { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\r\nimport { teal } from \"@material-ui/core/colors\";\r\n\r\nconst drawerWidth = 380;\r\n\r\nexport const diaryDrawerStyles =  makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                display: 'flex',\r\n            },\r\n            drawer: {\r\n                [theme.breakpoints.up('sm')]: {\r\n                    width: drawerWidth,\r\n                    flexShrink: 0,\r\n                },\r\n            },\r\n            appBar: {\r\n                [theme.breakpoints.up('sm')]: {\r\n                    width: `calc(100% - ${drawerWidth}px)`,\r\n                    marginLeft: drawerWidth,\r\n                }\r\n            },\r\n            appBar_text: {\r\n                paddingLeft: \"inherit\",\r\n                fontWeight:\"bold\",\r\n                flexGrow:1\r\n            },\r\n            menuButton: {\r\n                    marginRight: theme.spacing(2),\r\n                    [theme.breakpoints.up('sm')]: {\r\n                    display: 'none',\r\n                },\r\n            },\r\n            log_out_btn: {\r\n                color: \"white\",\r\n                fontSize: 14\r\n            },\r\n            // necessary for content to be below app bar\r\n            toolbar: theme.mixins.toolbar,\r\n            drawerPaper: {\r\n                width: drawerWidth,\r\n            },\r\n            content: {\r\n                flexGrow: 1,\r\n                padding: theme.spacing(3),\r\n                transform: \"scale(0.95)\"\r\n            },\r\n        }),\r\n);\r\n\r\nexport const createDiaryBtnContainerStyles = makeStyles((theme: Theme)=>\r\n        createStyles({\r\n            root:{\r\n                width:\"100%\"\r\n            }\r\n        })\r\n)\r\n\r\nexport const createDiaryBtnStyles = makeStyles((theme: Theme)=>\r\n        createStyles({\r\n                button: {\r\n                    margin: theme.spacing(1),\r\n                    fontWeight: 'bold',\r\n                    width: \"100%\",\r\n                    backgroundColor: teal[300]\r\n                }\r\n        })\r\n)\r\n\r\nexport const drawerAppBarStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                flexGrow: 1,\r\n                [theme.breakpoints.up('sm')]: {\r\n                    width: `calc(100% - ${drawerWidth}px)`,\r\n                    marginLeft: drawerWidth,\r\n                }\r\n            },\r\n            menuButton: {\r\n                marginRight: theme.spacing(2),\r\n            },\r\n            title: {\r\n                flexGrow: 1,\r\n            },\r\n        }),\r\n);","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\api\\index.api.ts",["190","191","192","193"],"import axios, {AxiosResponse, AxiosError, AxiosInstance} from \"axios\"\r\nimport {showAlert} from \"../mock_server/utils\"\r\n\r\nexport const http: AxiosInstance = axios.create({\r\n    baseURL: \"https://diaries.app\"\r\n})\r\n\r\nhttp.defaults.headers.post[\"Content-type\"] = \"application/json\"\r\n\r\nhttp.interceptors.response.use(\r\n    async(response: AxiosResponse):Promise<any> => {\r\n        if(response.status == 200 || response.status == 201 && response.status < 300) {\r\n            return response.data\r\n        }\r\n    },\r\n    //\r\n    async(error: AxiosError)=>{\r\n        const { response, request }: { response?: AxiosResponse; request?: XMLHttpRequest } = error;\r\n\r\n        if (response) {\r\n            if(response.status <= 400 && response.status<500) {\r\n                showAlert(response?.data?.data?.message, 'error')\r\n                return null\r\n            }else if (request) {\r\n                showAlert('Request failed. Please try again.', 'error');\r\n                return null\r\n            }\r\n        }\r\n        return Promise.reject(error)\r\n    }\r\n)","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\SignUp\\Signup.style.tsx",["194","195","196"],"import  {createMuiTheme, createStyles, withStyles, makeStyles,Theme, ThemeProvider} from '@material-ui/core/styles';\r\nimport {red} from \"@material-ui/core/colors\";\r\n\r\nexport const signUpStyles = makeStyles((theme: Theme) => createStyles({\r\n    form_control_margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    signup_btn:{\r\n        minWidth: 200,\r\n        marginTop: 30\r\n    },\r\n    text_field: {\r\n        minWidth: 300\r\n    },\r\n    anchor_element: {\r\n        textDecoration: \"none\",\r\n    },\r\n    validation_text: {\r\n        color:red[700]\r\n    }\r\n}))\r\n\r\nexport const snackbarStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2)\r\n      },\r\n      paddingTop: '4rem',\r\n      textAlign:'center',\r\n    },\r\n}));","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\Editor\\Editor.tsx",["197","198","199","200","201"],"import React, {FC, useState, useEffect} from 'react';\r\nimport {RootState} from \"./../../app_store/rootReducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport TextArea from \"@material-ui/core/TextareaAutosize\";\r\nimport clsx from \"clsx\";\r\n// Models.\r\nimport {Diary} from \"./../../models/diary.interface\";\r\nimport {Entry} from \"./../../models/entry.interface\";\r\n// API.\r\nimport {http} from \"./../../api/index.api\";\r\n// Features.\r\nimport {setCurrentlyEditing, setCanEdit} from \"./../../features/entry/editor.slice\";\r\nimport {diarySlice, updateDiary} from \"./../../features/diary/diary.slice\";\r\nimport {updateEntry} from \"./../../features/entry/entry.slice\";\r\nimport {showAlert} from \"./../../mock_server/utils\";\r\nimport {useAppDispatch} from \"./../../app_store/store\";\r\n// Styles.\r\nimport {editorTextFieldStyles, editorTextAreaStyles, editorSaveBtn, editorCardStyles} from \"./Editor.style\";\r\n\r\n\r\nconst Editor:FC = () => {\r\n    const { currentlyEditing: entry, canEdit, activeDiaryId } = useSelector((state: RootState) => state.editor)\r\n    const [editedEntry, updateEditedEntry] = useState(entry)\r\n    const dispatch = useAppDispatch()\r\n    // Style Class instances.\r\n    const editor_card_classes = editorCardStyles()\r\n    const editor_textfield_classes = editorTextFieldStyles()\r\n    const editor_textarea_classes = editorTextAreaStyles()\r\n    const editor_savebtn_classes = editorSaveBtn()\r\n    // \r\n    const saveEntry = () => {\r\n        if (activeDiaryId == null) {\r\n            showAlert(\"Please select a diary\", \"warning\")\r\n        }else if(entry == null) {\r\n            http.post<Entry, {diary: Diary, entry: Entry}>(`/diaries/entry/${activeDiaryId}`, editedEntry)\r\n                .then((data: any) => {\r\n                    if (data != null) {\r\n                        const {diary, entry: _entry} = data\r\n                        dispatch(setCurrentlyEditing(_entry))\r\n                        dispatch(updateDiary(diary))\r\n                    }\r\n                })\r\n        }else {\r\n            http.put<Entry, {diary: Diary, entry: Entry}>(`/diaries/entry/${entry.id}`,editedEntry)\r\n                .then((_entry: any)=>{\r\n                    if(_entry != null) {\r\n                        dispatch(setCurrentlyEditing(_entry))\r\n                        dispatch(updateEntry(_entry))\r\n                    }\r\n                })\r\n        }\r\n        dispatch(setCanEdit(false))\r\n    }\r\n    //\r\n    useEffect(()=>{\r\n        updateEditedEntry(entry)\r\n    },[entry])\r\n\r\n    return (\r\n        // <div style={{maxWidth:\"60%\", height:\"20%\"}}>\r\n           <div className={editor_card_classes.root}>\r\n                <Grid container alignItems=\"center\" justify=\"center\" component={Card}>   \r\n                    <Grid item sm={12} md={11} lg={11}>\r\n                        <TextField fullWidth className={editor_textfield_classes.root} id=\"title\" name=\"title\" variant=\"outlined\" \r\n                        placeholder=\"Entry Title\" />\r\n                    </Grid>\r\n                    <Grid item sm={12} md={11} lg={11}>\r\n                    <TextField className={editor_textarea_classes.root} multiline fullWidth variant=\"outlined\" rows={27}\r\n                    placeholder=\"Write here...\" />\r\n                    </Grid>\r\n                    <Grid item sm={12} md={11} lg={11}>\r\n                        <Button variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"large\"\r\n                            className={editor_savebtn_classes.button}\r\n                            startIcon={<SaveIcon />}>\r\n                            Save\r\n                        </Button>     \r\n                    </Grid>\r\n                </Grid>    \r\n            </div>\r\n        // </div>\r\n    )\r\n}\r\n\r\nexport default Editor\r\n","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\mock_server\\utils.ts",[],"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\DiaryEntriesList\\DiaryEntriesList.tsx",["202","203","204","205"],"import React, {FC, useEffect} from 'react';\r\nimport {useParams, Link} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem, {ListItemProps} from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {Note} from \"@material-ui/icons\";\r\n// Model\r\nimport {Entry} from \"./../../models/entry.interface\";\r\n// Features.\r\nimport {setEntry} from \"./../../features/entry/entry.slice\";\r\nimport {setCurrentlyEditing, setCanEdit} from \"./../../features/entry/editor.slice\";\r\n// Store dispatcher and RootState.\r\nimport {useAppDispatch} from \"./../../app_store/store\";\r\nimport {RootState} from \"./../../app_store/rootReducer\";\r\n// API.\r\nimport {http} from \"./../../api/index.api\";\r\n// Daysjs.\r\nimport * as dayjs from \"dayjs\";\r\n\r\nfunction ListItemLink(props: ListItemProps<'a', { button?: true }>) {\r\n    return <ListItem button component=\"a\" {...props} />;\r\n}\r\n\r\nconst DiaryEntriesList:FC = () => {\r\n    const {entries} = useSelector((state: RootState) => state)\r\n    const dispatch = useAppDispatch()\r\n    const {id} = useParams() // Route Params.\r\n    //\r\n    useEffect(()=>{\r\n        if (id!=null) {\r\n            http.get<null,{entries: Entry[]}>(`/diaries/entries/${id}`)\r\n                .then(({entries: _entries})=>{\r\n                    if (_entries) {\r\n                        const sortByLastUpdated = _entries.sort((a:any, b:any) => {\r\n                          return new dayjs.Dayjs(b.updatedAt).unix() - new dayjs.Dayjs(a.updatedAt).unix()\r\n                        });\r\n                        dispatch(setEntry(sortByLastUpdated))\r\n                    }\r\n                })\r\n        }\r\n    },[id, dispatch])\r\n    //\r\n    return (\r\n        <div className=\"entries\">\r\n            <header>\r\n                <Link to=\"/\">Go Back</Link>\r\n            </header>\r\n            <div>\r\n                <List component=\"nav\" aria-label=\"diary entries list\">\r\n                    <Divider/>\r\n                        <ListItem>\r\n                            <ListItemIcon><Note/></ListItemIcon>\r\n                            <ListItemText primary=\"Entry #1\" />\r\n                        </ListItem>\r\n                    <Divider/>\r\n                </List>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DiaryEntriesList\r\n","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\App.tsx",["206"],"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\app_store\\store.ts",[],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"207","replacedBy":"211"},{"ruleId":"209","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":1,"column":10,"nodeType":"215","messageId":"216","endLine":1,"endColumn":24},{"ruleId":"213","severity":1,"message":"217","line":1,"column":40,"nodeType":"215","messageId":"216","endLine":1,"endColumn":50},{"ruleId":"213","severity":1,"message":"218","line":1,"column":70,"nodeType":"215","messageId":"216","endLine":1,"endColumn":83},{"ruleId":"213","severity":1,"message":"219","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":16},{"ruleId":"213","severity":1,"message":"220","line":13,"column":8,"nodeType":"215","messageId":"216","endLine":13,"endColumn":16},{"ruleId":"213","severity":1,"message":"221","line":14,"column":8,"nodeType":"215","messageId":"216","endLine":14,"endColumn":17},{"ruleId":"213","severity":1,"message":"222","line":17,"column":20,"nodeType":"215","messageId":"216","endLine":17,"endColumn":25},{"ruleId":"213","severity":1,"message":"223","line":19,"column":17,"nodeType":"215","messageId":"216","endLine":19,"endColumn":21},{"ruleId":"213","severity":1,"message":"224","line":28,"column":8,"nodeType":"215","messageId":"216","endLine":28,"endColumn":17},{"ruleId":"213","severity":1,"message":"225","line":43,"column":13,"nodeType":"215","messageId":"216","endLine":43,"endColumn":20},{"ruleId":"213","severity":1,"message":"226","line":47,"column":11,"nodeType":"215","messageId":"216","endLine":47,"endColumn":41},{"ruleId":"213","severity":1,"message":"227","line":48,"column":11,"nodeType":"215","messageId":"216","endLine":48,"endColumn":29},{"ruleId":"213","severity":1,"message":"228","line":52,"column":12,"nodeType":"215","messageId":"216","endLine":52,"endColumn":19},{"ruleId":"213","severity":1,"message":"229","line":4,"column":10,"nodeType":"215","messageId":"216","endLine":4,"endColumn":15},{"ruleId":"213","severity":1,"message":"230","line":5,"column":10,"nodeType":"215","messageId":"216","endLine":5,"endColumn":15},{"ruleId":"207","replacedBy":"231"},{"ruleId":"209","replacedBy":"232"},{"ruleId":"213","severity":1,"message":"233","line":9,"column":8,"nodeType":"215","messageId":"216","endLine":9,"endColumn":10},{"ruleId":"213","severity":1,"message":"219","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":16},{"ruleId":"234","severity":1,"message":"235","line":11,"column":62,"nodeType":"236","messageId":"237","endLine":11,"endColumn":64},{"ruleId":"213","severity":1,"message":"238","line":3,"column":9,"nodeType":"215","messageId":"216","endLine":3,"endColumn":15},{"ruleId":"213","severity":1,"message":"239","line":3,"column":17,"nodeType":"215","messageId":"216","endLine":3,"endColumn":22},{"ruleId":"213","severity":1,"message":"240","line":4,"column":8,"nodeType":"215","messageId":"216","endLine":4,"endColumn":12},{"ruleId":"213","severity":1,"message":"241","line":6,"column":9,"nodeType":"215","messageId":"216","endLine":6,"endColumn":13},{"ruleId":"213","severity":1,"message":"242","line":8,"column":9,"nodeType":"215","messageId":"216","endLine":8,"endColumn":16},{"ruleId":"213","severity":1,"message":"243","line":10,"column":8,"nodeType":"215","messageId":"216","endLine":10,"endColumn":14},{"ruleId":"213","severity":1,"message":"244","line":1,"column":20,"nodeType":"215","messageId":"216","endLine":1,"endColumn":28},{"ruleId":"213","severity":1,"message":"245","line":2,"column":8,"nodeType":"215","messageId":"216","endLine":2,"endColumn":17},{"ruleId":"213","severity":1,"message":"246","line":4,"column":10,"nodeType":"215","messageId":"216","endLine":4,"endColumn":20},{"ruleId":"213","severity":1,"message":"247","line":11,"column":26,"nodeType":"215","messageId":"216","endLine":11,"endColumn":32},{"ruleId":"213","severity":1,"message":"238","line":11,"column":34,"nodeType":"215","messageId":"216","endLine":11,"endColumn":40},{"ruleId":"213","severity":1,"message":"214","line":1,"column":10,"nodeType":"215","messageId":"216","endLine":1,"endColumn":24},{"ruleId":"213","severity":1,"message":"248","line":1,"column":26,"nodeType":"215","messageId":"216","endLine":1,"endColumn":38},{"ruleId":"213","severity":1,"message":"217","line":1,"column":40,"nodeType":"215","messageId":"216","endLine":1,"endColumn":50},{"ruleId":"213","severity":1,"message":"218","line":1,"column":70,"nodeType":"215","messageId":"216","endLine":1,"endColumn":83},{"ruleId":"213","severity":1,"message":"249","line":12,"column":8,"nodeType":"215","messageId":"216","endLine":12,"endColumn":13},{"ruleId":"213","severity":1,"message":"250","line":17,"column":9,"nodeType":"215","messageId":"216","endLine":17,"endColumn":15},{"ruleId":"213","severity":1,"message":"251","line":23,"column":9,"nodeType":"215","messageId":"216","endLine":23,"endColumn":23},{"ruleId":"213","severity":1,"message":"252","line":23,"column":25,"nodeType":"215","messageId":"216","endLine":23,"endColumn":30},{"ruleId":"213","severity":1,"message":"253","line":27,"column":8,"nodeType":"215","messageId":"216","endLine":27,"endColumn":12},{"ruleId":"213","severity":1,"message":"254","line":37,"column":12,"nodeType":"215","messageId":"216","endLine":37,"endColumn":19},{"ruleId":"213","severity":1,"message":"253","line":23,"column":8,"nodeType":"215","messageId":"216","endLine":23,"endColumn":12},{"ruleId":"213","severity":1,"message":"255","line":24,"column":10,"nodeType":"215","messageId":"216","endLine":24,"endColumn":27},{"ruleId":"213","severity":1,"message":"254","line":34,"column":12,"nodeType":"215","messageId":"216","endLine":34,"endColumn":19},{"ruleId":"213","severity":1,"message":"256","line":35,"column":12,"nodeType":"215","messageId":"216","endLine":35,"endColumn":17},{"ruleId":"213","severity":1,"message":"257","line":35,"column":19,"nodeType":"215","messageId":"216","endLine":35,"endColumn":27},{"ruleId":"213","severity":1,"message":"258","line":36,"column":12,"nodeType":"215","messageId":"216","endLine":36,"endColumn":20},{"ruleId":"213","severity":1,"message":"259","line":36,"column":22,"nodeType":"215","messageId":"216","endLine":36,"endColumn":33},{"ruleId":"213","severity":1,"message":"260","line":1,"column":22,"nodeType":"215","messageId":"216","endLine":1,"endColumn":30},{"ruleId":"234","severity":1,"message":"235","line":12,"column":28,"nodeType":"236","messageId":"237","endLine":12,"endColumn":30},{"ruleId":"261","severity":1,"message":"262","line":12,"column":35,"nodeType":"263","messageId":"264","endLine":12,"endColumn":37},{"ruleId":"234","severity":1,"message":"235","line":12,"column":54,"nodeType":"236","messageId":"237","endLine":12,"endColumn":56},{"ruleId":"261","severity":1,"message":"262","line":12,"column":61,"nodeType":"263","messageId":"264","endLine":12,"endColumn":63},{"ruleId":"213","severity":1,"message":"214","line":1,"column":10,"nodeType":"215","messageId":"216","endLine":1,"endColumn":24},{"ruleId":"213","severity":1,"message":"217","line":1,"column":40,"nodeType":"215","messageId":"216","endLine":1,"endColumn":50},{"ruleId":"213","severity":1,"message":"218","line":1,"column":70,"nodeType":"215","messageId":"216","endLine":1,"endColumn":83},{"ruleId":"213","severity":1,"message":"265","line":9,"column":8,"nodeType":"215","messageId":"216","endLine":9,"endColumn":16},{"ruleId":"213","severity":1,"message":"266","line":10,"column":8,"nodeType":"215","messageId":"216","endLine":10,"endColumn":12},{"ruleId":"213","severity":1,"message":"267","line":18,"column":9,"nodeType":"215","messageId":"216","endLine":18,"endColumn":19},{"ruleId":"213","severity":1,"message":"268","line":27,"column":38,"nodeType":"215","messageId":"216","endLine":27,"endColumn":45},{"ruleId":"213","severity":1,"message":"269","line":36,"column":11,"nodeType":"215","messageId":"216","endLine":36,"endColumn":20},{"ruleId":"213","severity":1,"message":"270","line":14,"column":9,"nodeType":"215","messageId":"216","endLine":14,"endColumn":28},{"ruleId":"213","severity":1,"message":"271","line":14,"column":30,"nodeType":"215","messageId":"216","endLine":14,"endColumn":40},{"ruleId":"213","severity":1,"message":"272","line":23,"column":10,"nodeType":"215","messageId":"216","endLine":23,"endColumn":22},{"ruleId":"213","severity":1,"message":"273","line":28,"column":12,"nodeType":"215","messageId":"216","endLine":28,"endColumn":19},{"ruleId":"213","severity":1,"message":"274","line":2,"column":8,"nodeType":"215","messageId":"216","endLine":2,"endColumn":12},"no-native-reassign",["275"],"no-negated-in-lhs",["276"],["275"],["276"],"@typescript-eslint/no-unused-vars","'createMuiTheme' is defined but never used.","Identifier","unusedVar","'withStyles' is defined but never used.","'ThemeProvider' is defined but never used.","'create' is defined but never used.","'MailIcon' is defined but never used.","'InboxIcon' is defined but never used.","'Theme' is defined but never used.","'Icon' is defined but never used.","'DiaryTile' is defined but never used.","'windows' is assigned a value but never used.","'diaryCreateBtnContainerClasses' is assigned a value but never used.","'diaryAppBarClasses' is assigned a value but never used.","'diaries' is assigned a value but never used.","'Diary' is defined but never used.","'Entry' is defined but never used.",["275"],["276"],"'sw' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Routes' is defined but never used.","'Route' is defined but never used.","'Swal' is defined but never used.","'http' is defined but never used.","'setUser' is defined but never used.","'Editor' is defined but never used.","'useState' is defined but never used.","'PropTypes' is defined but never used.","'makeStyles' is defined but never used.","'Router' is defined but never used.","'createStyles' is defined but never used.","'axios' is defined but never used.","'signup' is defined but never used.","'useAppDispatch' is defined but never used.","'store' is defined but never used.","'Home' is defined but never used.","'loading' is assigned a value but never used.","'validateYupSchema' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'useTheme' is defined but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'TextArea' is defined but never used.","'clsx' is defined but never used.","'diarySlice' is defined but never used.","'canEdit' is assigned a value but never used.","'saveEntry' is assigned a value but never used.","'setCurrentlyEditing' is defined but never used.","'setCanEdit' is defined but never used.","'ListItemLink' is defined but never used.","'entries' is assigned a value but never used.","'logo' is defined but never used.","no-global-assign","no-unsafe-negation"]