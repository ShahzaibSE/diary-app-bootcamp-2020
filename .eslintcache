[{"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\DiaryTile\\DiaryTile.style.ts":"1","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\DiaryTile\\DiaryTile.tsx":"2","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\App.tsx":"3","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\features\\entry\\editor.slice.ts":"4","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\mock_server\\controllers\\entry.controller.ts":"5"},{"size":968,"mtime":1614513716148,"results":"6","hashOfConfig":"7"},{"size":3305,"mtime":1614514057264,"results":"8","hashOfConfig":"7"},{"size":412,"mtime":1613994725866,"results":"9","hashOfConfig":"7"},{"size":1008,"mtime":1613994725899,"results":"10","hashOfConfig":"7"},{"size":1711,"mtime":1613994725903,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1v7flyc",{"filePath":"14","messages":"15","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\DiaryTile\\DiaryTile.style.ts",["25"],"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\components\\DiaryTile\\DiaryTile.tsx",["26","27","28","29","30","31","32","33"],"import React, {FC, useState, useEffect} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {AnimationWrapper} from \"react-hover-animation\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n// Model.\r\nimport {Diary} from \"../../models/diary.interface\";\r\n// Features.\r\nimport {updateDiary} from \"../../features/diary/diary.slice\";\r\nimport {setCanEdit, setCurrentlyEditing, setActiveDiaryId} from \"../../features/entry/editor.slice\";\r\n// Store\r\nimport {useAppDispatch} from \"../../app_store/store\";\r\n// API\r\nimport {http} from \"../../api/index.api\";\r\n// Utilities\r\nimport * as dayjs from \"dayjs\";\r\nimport {showAlert} from \"../../mock_server/utils\";\r\n// Styles\r\nimport {diaryTilePaperStyles, diaryTileTotalEntries, diaryTileTitleStyles} from \"./DiaryTile.style\";\r\n\r\ninterface Props {\r\n    diary: Diary\r\n}\r\n\r\n\r\nconst DiaryTile:FC<Props>  = (props) => {\r\n    const [diary, setDiary] = useState(props.diary)\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const dispatch = useAppDispatch()\r\n    const totalEntries = props.diary?.entryIds?.length\r\n    // Classes.\r\n    const diarytile_paper_classes = diaryTilePaperStyles()\r\n    const diaryTile_total_entries_classes = diaryTileTotalEntries()\r\n    const diaryTile_title_classes = diaryTileTitleStyles()\r\n    //\r\n    const saveCreate = () => {\r\n        http.put<Diary, Diary>(`/diaries/${diary.id}`, diary)\r\n            .then(diary => {\r\n                if (diary) {\r\n                    dispatch(updateDiary(diary))\r\n                    showAlert('Saved!', 'success');\r\n                }\r\n            }).finally(()=>{\r\n                setIsEditing(false)\r\n            })\r\n    }\r\n    //\r\n    return (\r\n        <div>\r\n            <AnimationWrapper config={{\r\n                transform:{initial:'scale(1)',onHover:'scale(1.1)'},\r\n                opacity: {initial:'1',onHover:'1'}\r\n            }}>   \r\n                <Paper className={diarytile_paper_classes.root} variant=\"outlined\">\r\n                    <Typography className={diaryTile_title_classes.root} \r\n                                variant=\"h5\" title=\"Click to Edit\" onClick={()=>{setIsEditing(true)}} style={{cursor:\"pointer\", fontWeight:\"bold\"}}>\r\n                        {isEditing ? \r\n                            <TextField value={diary.title} onChange={(e)=>{\r\n                                    setDiary({...diary, title:diary.title})}} onKeyUp={(e)=>{\r\n                                        if(e.key == \"Enter\") {\r\n                                            saveCreate()\r\n                                        } \r\n                                    }} variant=\"outlined\"/> : \r\n                                    <span>{diary.title}</span> }\r\n                    </Typography>\r\n                    <Typography className={diaryTile_total_entries_classes.root} \r\n                                variant=\"subtitle2\" noWrap={false}>\r\n                        {totalEntries ?? 0} Saved Entries\r\n                    </Typography>\r\n                </Paper>\r\n            </AnimationWrapper>\r\n            <Divider/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DiaryTile\r\n","F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\App.tsx",["34"],"import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n//\r\nimport GridComponent from \"./components/GridComponent/Grid\"\r\n// Redux Provider.\r\nimport {Provider} from \"react-redux\"\r\n// Store.\r\nimport store from \"./app_store/store\"\r\n\r\nfunction App() {\r\n  return (\r\n   <Provider store={store}> \r\n    <div>\r\n      <GridComponent/>\r\n    </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["35","36"],"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\features\\entry\\editor.slice.ts",[],"F:\\shahzaibnoor-projects\\panacloud-bootcamp-2020\\diary-app-bootcamp-2020\\src\\mock_server\\controllers\\entry.controller.ts",[],{"ruleId":"37","severity":1,"message":"38","line":1,"column":22,"nodeType":"39","messageId":"40","endLine":1,"endColumn":30},{"ruleId":"37","severity":1,"message":"41","line":1,"column":30,"nodeType":"39","messageId":"40","endLine":1,"endColumn":39},{"ruleId":"37","severity":1,"message":"42","line":2,"column":9,"nodeType":"39","messageId":"40","endLine":2,"endColumn":13},{"ruleId":"37","severity":1,"message":"43","line":8,"column":8,"nodeType":"39","messageId":"40","endLine":8,"endColumn":14},{"ruleId":"37","severity":1,"message":"44","line":13,"column":9,"nodeType":"39","messageId":"40","endLine":13,"endColumn":19},{"ruleId":"37","severity":1,"message":"45","line":13,"column":21,"nodeType":"39","messageId":"40","endLine":13,"endColumn":40},{"ruleId":"37","severity":1,"message":"46","line":13,"column":42,"nodeType":"39","messageId":"40","endLine":13,"endColumn":58},{"ruleId":"37","severity":1,"message":"47","line":19,"column":13,"nodeType":"39","messageId":"40","endLine":19,"endColumn":18},{"ruleId":"48","severity":1,"message":"49","line":63,"column":50,"nodeType":"50","messageId":"51","endLine":63,"endColumn":52},{"ruleId":"37","severity":1,"message":"52","line":2,"column":8,"nodeType":"39","messageId":"40","endLine":2,"endColumn":12},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},"@typescript-eslint/no-unused-vars","'useTheme' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'setCanEdit' is defined but never used.","'setCurrentlyEditing' is defined but never used.","'setActiveDiaryId' is defined but never used.","'dayjs' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'logo' is defined but never used.","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-global-assign","no-unsafe-negation"]